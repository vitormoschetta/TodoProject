version: '3'

networks: 
  todonetwork:      
    driver: bridge
    name: todo-network

services:

  app:
    container_name: todo.app
    image: vitormoschetta/todo.app
    build:
      context: .
      dockerfile: infra/docker/Todo.App/Dockerfile    
    environment:
      API_URL_CONNECTION: "http://todo.api:6001/api/"
    ports:
      - 6002:6002
    networks:
      - todonetwork

  api:
    container_name: todo.api
    image: vitormoschetta/todo.api
    build:
      context: .
      dockerfile: infra/docker/Todo.Api/Dockerfile
    environment:
      DB_CONNECTION__HOST: ${DB_CONNECTION__HOST}
      DB_CONNECTION__USER: ${DB_CONNECTION__USER}
      DB_CONNECTION__PASSWORD: ${DB_CONNECTION__PASSWORD}
      DB_CONNECTION__DATABASE: ${DB_CONNECTION__DATABASE}
      # ASPNETCORE_Kestrel__Certificates__Default__Password: ${ASPNETCORE_Kestrel__Certificates__Default__Password}
      # ASPNETCORE_Kestrel__Certificates__Default__Path: ${ASPNETCORE_Kestrel__Certificates__Default__Path}
    # volumes:
    #   - ./Infra/docker/https:/https:ro
    ports:
      - 6001:6001
    expose:
      - 6001
    networks:
      - todonetwork
    depends_on:
      - db

  db:
    container_name: todo.api.db
    image: mysql:5.7
    environment:
      -MYSQL_ROOT_PASSWORD: MySql2022
      MYSQL_DATABASE: "todoapidb"
    volumes:
      - ./infra/docker/MySql/:/tmp/seeds/
    ports:
      - "3306:3306"  
    networks:
      - todonetwork

  elasticsearch:
    container_name: todo.elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.1
    ports:
      - 9200:9200
      - 9300:9300
    environment:      
      - xpack.security.enabled=false
      - discovery.type=single-node
    networks:
      - todonetwork 

  kibana:
    container_name: todo.kibana
    image: docker.elastic.co/kibana/kibana:7.11.1
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://todo.elasticsearch:9200
    networks:
      - todonetwork
    depends_on:
      - elasticsearch
   
