version: '3'

networks: 
  todonetwork:      
    driver: bridge
    name: todo-network

services:

  ui.blazor:
    container_name: todo.ui.blazor
    image: vitormoschetta/todo.ui.blazor
    build:
      context: .
      dockerfile: ./infra/docker/Todo.UI.Blazor/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://*:6002
      API_URL_CONNECTION: "http://todo.api:6001/api/"
    ports:
      - 6002:6002
    networks:
      - todonetwork
    depends_on:
      - api

  api:
    container_name: todo.api
    image: vitormoschetta/todo.api
    build:
      context: .
      dockerfile: infra/docker/Todo.Api/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://*:6001
      DatabaseConnection__Host: ${DatabaseConnection__Host}
      DatabaseConnection__Username: ${DatabaseConnection__Username}
      DatabaseConnection__Password: ${DatabaseConnection__Password}
      DatabaseConnection__Database: ${DatabaseConnection__Database}
      RabbitMQ__Host: ${RabbitMQ__Host}
      RabbitMQ__Queue: ${RabbitMQ__Queue}
      Elasticsearch__Uri: ${Elasticsearch__Uri}      
      # ASPNETCORE_Kestrel__Certificates__Default__Password: ${ASPNETCORE_Kestrel__Certificates__Default__Password}
      # ASPNETCORE_Kestrel__Certificates__Default__Path: ${ASPNETCORE_Kestrel__Certificates__Default__Path}    
    ports:
      - 6001:6001
    networks:
      - todonetwork
    depends_on:
      - db
      - rabbitmq 

  db:
    container_name: todo.api.db
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: MySql2022
      MYSQL_DATABASE: "todoapidb"
    volumes:
      - ./infra/docker/MySql/:/tmp/seeds/
    ports:
      - "3306:3306"  
    networks:
      - todonetwork

  rabbitmq:
    container_name: todo.rabbitmq
    image: rabbitmq:3
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - todonetwork  

  elasticsearch:
    container_name: todo.elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.2.2
    ports:
      - 9200:9200
      - 9300:9300
    environment:      
      - xpack.security.enabled=false
      - discovery.type=single-node
    mem_limit: 5073741824
    networks:
      - todonetwork

  kibana:
    container_name: todo.kibana
    image: docker.elastic.co/kibana/kibana:8.2.2
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://todo.elasticsearch:9200
    networks:
      - todonetwork
    depends_on:
      - elasticsearch

  logstash:
    container_name: todo.logstash
    image: docker.elastic.co/logstash/logstash:8.2.2
    ports:
      - 5044:5044
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./infra/docker/logstash/logstash.conf:/etc/logstash/conf.d/logstash.conf:ro      
    environment:
      - ELASTICSEARCH_HOSTS=http://todo.elasticsearch:9200
      - xpack.monitoring.elasticsearch.hosts=["http://todo.elasticsearch:9200"]
    networks:
      - todonetwork
    depends_on:
      - elasticsearch

  filebeat:
    container_name: todo.filebeat
    image: docker.elastic.co/beats/filebeat:8.2.2
    user: root
    network_mode: host
    volumes:
      - ./infra/docker/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - logstash
